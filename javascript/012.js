/*
HIGHLY DIVISIBLE TRIANGULAR NUMBER
Problem 12
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
1: 1
3: 1, 3
6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1 3, 7, 21
28: 1, 2, 4, 7, 14, 28
 
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

// returns the number of divisors using prime factorization
// n = p^a * q^b * r^c
// then the number of divsors --> divisors(n) = (a+1)(b+1)(c+1)
function countDivisors(n) {
    let count = 1;
    let factor = 2;
    
    while (factor * factor <= n){
        let power = 0;
        
        // coucount how many times factor divides n
        while (n % factor === 0){
            n = n / factor;
            power++;
        }
        
        // iif factor divides n at least once
        if (power > 0){
            count *= (power + 1);
        }
        factor++;
    }
    
    // if n is a prime greater than sqrt(original_n), it contributes (1+1) to the count
    if (n > 1){
        count *= 2;
    }
    return count;
}

// T_n = n(n+1)/2
function findTriangleWithDivisors(limit){
    let n = 1;
    while(true){
        let triangle = (n * (n+1)) / 2;
        if(countDivisors(triangle) > limit){
            return triangle;
        }
        n++;
    }
}

console.log(findTriangleWithDivisors(500));
